{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Desktop/LMGame/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Desktop/LMGame/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginDetailsService } from '../services/login-details.service';\nimport { SubscriptionService } from '../services/subscription.service';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/subscription.service\";\nimport * as i2 from \"../services/login-details.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/fire/compat/firestore\";\nimport * as i6 from \"../prof-menu/prof-menu.component\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/button\";\nvar _c0 = [\"lform\"];\nexport var ProfNewSubscriptionComponent = /*#__PURE__*/(function () {\n  var ProfNewSubscriptionComponent = /*#__PURE__*/function () {\n    function ProfNewSubscriptionComponent(subscriptionService, loginDetailsService, router, fb, firestore, baseURL) {\n      _classCallCheck(this, ProfNewSubscriptionComponent);\n\n      this.subscriptionService = subscriptionService;\n      this.loginDetailsService = loginDetailsService;\n      this.router = router;\n      this.fb = fb;\n      this.firestore = firestore;\n      this.baseURL = baseURL;\n      this.formErrors = {\n        'startDate': new Date(),\n        'endDate': new Date(),\n        'userEmails': \"\"\n      };\n      this.startDate = new Date();\n      this.endDate = new Date();\n      this.userEmails = \"\";\n      this.validationMessages = {\n        'startDate': {\n          'required': 'Start date is required.'\n        },\n        'endDate': {\n          'required': 'End date is required.'\n        },\n        'userEmails': {\n          'required': 'Alteast one user email is required.'\n        }\n      };\n      this.subscriptionDetail = {\n        id: 0,\n        profId: '',\n        isActive: false,\n        name: '',\n        startDate: \"\",\n        endDate: \"\",\n        duration: 0,\n        userEmails: []\n      };\n      this.createForm();\n    }\n\n    _createClass(ProfNewSubscriptionComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"createForm\",\n      value: function createForm() {\n        // this.subscriptionForm = this.fb.group({\n        //   startDate: [new Date(), [Validators.required]],\n        //   endDate: [new Date(), [Validators.required]],\n        //   userEmails : [[],[Validators.required]]\n        // });\n        this.subscriptionForm = this.fb.group({\n          startDate: new FormControl(),\n          endDate: new FormControl(),\n          userEmails: ''\n        }); // this.subscriptionForm.valueChanges\n        //   .subscribe(data => this.onValueChanged(data));\n        // this.onValueChanged();\n      }\n    }, {\n      key: \"processEmails\",\n      value: function processEmails(emailString) {\n        var emails;\n        var trimedEmail = new Array();\n        emails = emailString.split(',');\n\n        for (var email in emails) {\n          trimedEmail.push(emails[email].trim());\n        }\n\n        return trimedEmail;\n      }\n    }, {\n      key: \"getDifferenceInDays\",\n      value: function getDifferenceInDays(date1, date2) {\n        var diffInMs = Math.abs(date2 - date1);\n        return diffInMs / (1000 * 60 * 60 * 24);\n      }\n    }, {\n      key: \"toDDMMYYYY\",\n      value: function toDDMMYYYY(d) {\n        var yyyy = d.getFullYear().toString();\n        var mm = (d.getMonth() + 101).toString().slice(-2);\n        var dd = (d.getDate() + 100).toString().slice(-2);\n        return dd + '-' + mm + '-' + yyyy;\n      }\n    }, {\n      key: \"isSubFromToday\",\n      value: function isSubFromToday(date1) {\n        var date = new Date();\n\n        if (date1 == this.toDDMMYYYY(date)) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"onValueChanged\",\n      value: function onValueChanged(data) {\n        if (!this.subscriptionForm) {\n          return;\n        }\n\n        var form = this.subscriptionForm;\n\n        for (var field in this.subscriptionForm) {\n          if (this.subscriptionForm.hasOwnProperty(field)) {\n            this.subscriptionForm[field] = '';\n            var control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n              var messages = this.validationMessages[field];\n\n              for (var key in control.errors) {\n                if (control.errors.hasOwnProperty(key)) {\n                  this.subscriptionForm[field] += messages[key] + '';\n                }\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: \"onSubscribeSubmit\",\n      value: function onSubscribeSubmit(data) {\n        var _this = this;\n\n        console.log(data);\n        var profDetails;\n        var subs = '';\n        this.subscriptionDetail.startDate = this.toDDMMYYYY(data.startDate);\n        this.subscriptionDetail.endDate = this.toDDMMYYYY(data.endDate);\n        this.subscriptionDetail.duration = this.getDifferenceInDays(data.startDate, data.endDate);\n\n        if (this.isSubFromToday(this.subscriptionDetail.startDate)) {\n          this.subscriptionDetail.isActive = true;\n        } else {\n          this.subscriptionDetail.isActive = false;\n        }\n\n        this.subscriptionDetail.userEmails = this.processEmails(data.userEmails);\n        this.subscriptionDetail.profId = localStorage.getItem('id');\n        console.log('Final Payload', this.subscriptionDetail);\n        this.subscriptionService.addNewSubscription(this.subscriptionDetail);\n        console.log(\"Subscription Id\", localStorage.getItem('SubId'));\n        setTimeout(function () {\n          return _this.subscriptionService.updateSubscription(localStorage.getItem('SubId'), localStorage.getItem('id'));\n        }, 8000);\n        setTimeout(function () {\n          for (var email in _this.subscriptionDetail.userEmails) {\n            // Send Emails\n            // add to database\n            _this.firestore.collection('userLoginDetails').add({\n              email: _this.subscriptionDetail.userEmails[email],\n              password: \"123456789\",\n              professor: localStorage.getItem('id'),\n              subscription: localStorage.getItem('SubId'),\n              isActive: true\n            });\n          }\n        }, 8000);\n        this.subscriptionForm.reset({\n          'startDate': new Date(),\n          'endDate': new Date(),\n          'userEmails': ''\n        });\n        this.subscriptionFormDirective.resetForm();\n        this.router.navigate(['/prof/home', localStorage.getItem('id')]);\n      }\n    }]);\n\n    return ProfNewSubscriptionComponent;\n  }();\n\n  ProfNewSubscriptionComponent.ɵfac = function ProfNewSubscriptionComponent_Factory(t) {\n    return new (t || ProfNewSubscriptionComponent)(i0.ɵɵdirectiveInject(i1.SubscriptionService), i0.ɵɵdirectiveInject(i2.LoginDetailsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.AngularFirestore), i0.ɵɵdirectiveInject('BaseURL'));\n  };\n\n  ProfNewSubscriptionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfNewSubscriptionComponent,\n    selectors: [[\"app-prof-new-subscription\"]],\n    viewQuery: function ProfNewSubscriptionComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subscriptionFormDirective = _t.first);\n      }\n    },\n    decls: 29,\n    vars: 5,\n    consts: [[1, \"container\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"lform\", \"ngForm\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"formControlName\", \"startDate\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"matDatepickerToggleIcon\", \"\"], [\"picker\", \"\"], [\"matInput\", \"\", \"formControlName\", \"endDate\", 3, \"matDatepicker\"], [\"pickernew\", \"\"], [\"matInput\", \"\", \"formControlName\", \"userEmails\", \"placeholder\", \"Enter user email\", \"type\", \"text\", \"required\", \"\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"background-primary\", \"text-floral-white\"]],\n    template: function ProfNewSubscriptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelement(0, \"app-prof-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ProfNewSubscriptionComponent_Template_form_ngSubmit_2_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          var _r0 = i0.ɵɵreference(3);\n\n          return ctx.onSubscribeSubmit(_r0.value);\n        });\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵelementStart(5, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Choose start date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementStart(9, \"mat-datepicker-toggle\", 5);\n        i0.ɵɵelementStart(10, \"mat-icon\", 6);\n        i0.ɵɵtext(11, \"keyboard_arrow_down\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"mat-datepicker\", null, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵelementStart(15, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Choose a end date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementStart(19, \"mat-datepicker-toggle\", 5);\n        i0.ɵɵelementStart(20, \"mat-icon\", 6);\n        i0.ɵɵtext(21, \"keyboard_arrow_down\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"mat-datepicker\", null, 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵelementStart(25, \"mat-form-field\");\n        i0.ɵɵelement(26, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 11);\n        i0.ɵɵtext(28, \"Subscribe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        var _r1 = i0.ɵɵreference(13);\n\n        var _r2 = i0.ɵɵreference(23);\n\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.subscriptionForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"matDatepicker\", _r2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r2);\n      }\n    },\n    directives: [i6.ProfMenuComponent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i7.MatFormField, i7.MatLabel, i8.MatInput, i4.DefaultValueAccessor, i9.MatDatepickerInput, i4.NgControlStatus, i4.FormControlName, i9.MatDatepickerToggle, i7.MatSuffix, i10.MatIcon, i9.MatDatepickerToggleIcon, i9.MatDatepicker, i4.RequiredValidator, i11.MatButton],\n    styles: [\"\"]\n  });\n  return ProfNewSubscriptionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}