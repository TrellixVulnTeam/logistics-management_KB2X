{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Desktop/LMGame/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Desktop/LMGame/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { LoginDetailsService } from './../services/login-details.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../services/login-details.service\";\nimport * as i4 from \"../admin-menu/admin-menu.component\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nvar _c0 = [\"sform\"];\n\nfunction SignupComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.formErrors.name);\n  }\n}\n\nfunction SignupComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.formErrors.email);\n  }\n}\n\nfunction SignupComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.formErrors.password);\n  }\n}\n\nexport var SignupComponent = /*#__PURE__*/(function () {\n  var SignupComponent = /*#__PURE__*/function () {\n    function SignupComponent(fb, router, loginDetailsService) {\n      _classCallCheck(this, SignupComponent);\n\n      this.fb = fb;\n      this.router = router;\n      this.loginDetailsService = loginDetailsService;\n      this.userDetailcopy = {\n        id: 0,\n        email: '',\n        password: '',\n        name: '',\n        subscription: 0\n      };\n      this.userDetail = {\n        id: 0,\n        email: '',\n        password: '',\n        name: '',\n        subscription: 0\n      };\n      this.formErrors = {\n        'name': '',\n        'email': '',\n        'password': ''\n      };\n      this.validationMessages = {\n        'name': {\n          'required': 'Name is required.',\n          'minlength': 'Name must be at least 2 characters long.',\n          'maxlength': 'Name cannot be more than 25 characters long.'\n        },\n        'email': {\n          'required': 'Email is required.',\n          'email': 'Email not in valid format.'\n        },\n        'password': {\n          'required': 'Password is required.',\n          'minlength': 'Password must be at least 8 characters long.',\n          'maxlength': 'Password cannot be more than 25 characters long.'\n        }\n      };\n      this.createForm();\n    }\n\n    _createClass(SignupComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        // Initialising the USER list\n        this.getRecordsfromDatabase();\n      }\n      /**\n      * @desc Getting User login records form the database\n      **/\n\n    }, {\n      key: \"getRecordsfromDatabase\",\n      value: function getRecordsfromDatabase() {\n        var _this = this;\n\n        this.loginDetailsService.getLoginDetailsf().subscribe(function (loginDetails) {\n          _this.USERS = loginDetails.map(function (data) {\n            return Object.assign({\n              email: data.payload.doc.id\n            }, data.payload.doc.data());\n          });\n        });\n      }\n    }, {\n      key: \"createForm\",\n      value: function createForm() {\n        var _this2 = this;\n\n        this.signupForm = this.fb.group({\n          name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(25)]],\n          email: ['', [Validators.required, Validators.email]],\n          password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(25)]]\n        });\n        this.signupForm.valueChanges.subscribe(function (data) {\n          return _this2.onValueChanged(data);\n        });\n        this.onValueChanged();\n      }\n    }, {\n      key: \"onValueChanged\",\n      value: function onValueChanged(data) {\n        if (!this.signupForm) {\n          return;\n        }\n\n        var form = this.signupForm;\n\n        for (var field in this.formErrors) {\n          if (this.formErrors.hasOwnProperty(field)) {\n            this.formErrors[field] = '';\n            var control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n              var messages = this.validationMessages[field];\n\n              for (var key in control.errors) {\n                if (control.errors.hasOwnProperty(key)) {\n                  this.formErrors[field] += messages[key] + '';\n                }\n              }\n            }\n          }\n        }\n      }\n      /**\n      * @desc onSubmit on signupForm submission to render data and post new user to Database\n      **/\n\n    }, {\n      key: \"onSignupSubmit\",\n      value: function onSignupSubmit() {\n        this.userDetailcopy = this.signupForm.value;\n        this.userDetailcopy.id = this.USERS.length;\n        this.userDetailcopy.subscription = 0;\n        this.putLoginDetails(this.userDetailcopy);\n        this.signupForm.reset({\n          email: '',\n          password: ''\n        });\n        this.signupFormDirective.resetForm();\n        this.router.navigate(['/admin/home']);\n      }\n      /**\n      * @desc Post new user's data to Database\n      **/\n\n    }, {\n      key: \"putLoginDetails\",\n      value: function putLoginDetails(userDetail) {\n        this.loginDetailsService.putLoginDetailsf(userDetail);\n        alert(userDetail.subscription);\n      }\n    }]);\n\n    return SignupComponent;\n  }();\n\n  SignupComponent.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginDetailsService));\n  };\n\n  SignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    viewQuery: function SignupComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.signupFormDirective = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 4,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutGap\", \"10px\", 1, \"container\"], [\"fxFlex\", \"\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"sform\", \"ngForm\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\", \"type\", \"text\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Email-ID\", \"type\", \"text\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"background-primary\", \"text-floral-white\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-admin-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5, \"Signup New User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSignupSubmit();\n        });\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵelementStart(10, \"mat-form-field\");\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵtemplate(12, SignupComponent_mat_error_12_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵelementStart(14, \"mat-form-field\");\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵtemplate(16, SignupComponent_mat_error_16_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵelementStart(18, \"mat-form-field\");\n        i0.ɵɵelement(19, \"input\", 7);\n        i0.ɵɵtemplate(20, SignupComponent_mat_error_20_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 8);\n        i0.ɵɵtext(22, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formErrors.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.formErrors.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.formErrors.password);\n      }\n    },\n    directives: [i4.AdminMenuComponent, i5.DefaultLayoutDirective, i5.DefaultLayoutGapDirective, i5.DefaultFlexDirective, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.MatFormField, i7.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i8.NgIf, i9.MatButton, i6.MatError],\n    styles: [\"\"]\n  });\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}