{"ast":null,"code":"import _classCallCheck from \"/Users/apple/Desktop/LMGame/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/apple/Desktop/LMGame/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { GameDetailsService } from '../services/game-details.service';\nimport { GamingDataService } from '../services/gaming-data.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoginDetailsService } from '../services/login-details.service';\nimport { MatDialog } from '@angular/material';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/game-details.service\";\nimport * as i5 from \"../services/gaming-data.service\";\nimport * as i6 from \"../services/login-details.service\";\nimport * as i7 from \"../user-menu/user-menu.component\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nvar _c0 = [\"oform\"];\n\nfunction UserGamingComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function UserGamingComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onServerLoad();\n    });\n    i0.ɵɵtext(1, \"Click to start the simulation \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_3_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.gDetail.weeksTotal, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.gDetail.storageTotal, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.gDetail.stockInitial, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.invCostFactor, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.backlogCostFactor, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.demmurageCostFactor, \" \");\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"th\");\n    i0.ɵɵtext(3, \"Total Weeks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Total Storage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Initial Stock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Inventory Cost Factor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Backlog Cost Factor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Demurrage Cost Factor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, UserGamingComponent_ng_container_9_table_3_ng_container_14_Template, 14, 6, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.gDetailsShow);\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_4_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.gDetail.truckLeadTime, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.gDetail.trainLeadTime, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.gDetail.truckFreightRate, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.gDetail.trainFreightRate, \" \");\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"th\");\n    i0.ɵɵtext(3, \"Truck Lead Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Train Lead Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Truck Freight Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Train Freight Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, UserGamingComponent_ng_container_9_table_4_ng_container_10_Template, 10, 4, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.gDetailsShow);\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_form_8_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.formErrors.orderRoad);\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_form_8_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r13.formErrors.orderRail);\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_form_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 11, 12);\n    i0.ɵɵlistener(\"ngSubmit\", function UserGamingComponent_ng_container_9_form_8_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      var ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.onOrderSubmit();\n    });\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵelementStart(3, \"mat-form-field\");\n    i0.ɵɵelement(4, \"input\", 13);\n    i0.ɵɵtemplate(5, UserGamingComponent_ng_container_9_form_8_mat_error_5_Template, 2, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵelementStart(7, \"mat-form-field\");\n    i0.ɵɵelement(8, \"input\", 14);\n    i0.ɵɵtemplate(9, UserGamingComponent_ng_container_9_form_8_mat_error_9_Template, 2, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 15);\n    i0.ɵɵtext(11, \"Order/Next Round\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r11 = i0.ɵɵreference(1);\n\n    var ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r6.orderForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.formErrors.orderRoad);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.formErrors.orderRail);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", _r11.form.invalid);\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UserGamingComponent_ng_container_9_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      var ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.finalSubmit();\n    });\n    i0.ɵɵtext(1, \"Submit Final Score\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_12_ng_container_42_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"td\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"td\");\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"td\");\n    i0.ɵɵtext(32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"td\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"td\");\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"td\");\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"td\");\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var i_r21 = ctx.index;\n    var ctx_r19 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r21 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.gDetail.wpcs[i_r21].price, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.gDetail.wpcs[i_r21].cDemand, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.inventoryStock[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.backlogItems[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.demmurageItems[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.receiptsAll[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.gDetail.wpcs[i_r21].cDemand + ctx_r19.backlogItems[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.cFulfilledDemands[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.orderRoad[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.orderRail[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.balanceStock[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.shortageAll[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.warehouseStock[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.invCosts[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.blogCosts[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.demCosts[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.transportCosts[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.weeklyTotalCosts[i_r21], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.totalCosts[i_r21], \" \");\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_12_ng_container_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, UserGamingComponent_ng_container_9_table_12_ng_container_42_tr_1_Template, 41, 20, \"tr\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r18.arrayTwo(ctx_r18.week));\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_table_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 10);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"th\");\n    i0.ɵɵtext(3, \"Week\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Chemical Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Customer Demand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Inventory Items(Stock)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Backlog Items\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Demurrage Items\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Receipt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Total Demand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Customer fulfilled demand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\");\n    i0.ɵɵtext(21, \"Order Placed by Road\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"th\");\n    i0.ɵɵtext(23, \"Order Placed by Rail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"th\");\n    i0.ɵɵtext(25, \"Balance Stock\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"th\");\n    i0.ɵɵtext(27, \"Shortage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"th\");\n    i0.ɵɵtext(29, \"In warehouse\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"th\");\n    i0.ɵɵtext(31, \"Inventory Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"th\");\n    i0.ɵɵtext(33, \"Backlog Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"th\");\n    i0.ɵɵtext(35, \"Demurrage Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"th\");\n    i0.ɵɵtext(37, \"Transportation Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"th\");\n    i0.ɵɵtext(39, \"Weekly Total Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"th\");\n    i0.ɵɵtext(41, \"Cumm. Total Cost\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(42, UserGamingComponent_ng_container_9_table_12_ng_container_42_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(42);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.gDetailsShow);\n  }\n}\n\nfunction UserGamingComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h4\", 6);\n    i0.ɵɵtext(2, \"Initial Game Details - Cost Factors and Inventory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UserGamingComponent_ng_container_9_table_3_Template, 15, 1, \"table\", 7);\n    i0.ɵɵtemplate(4, UserGamingComponent_ng_container_9_table_4_Template, 11, 1, \"table\", 7);\n    i0.ɵɵelementStart(5, \"div\", 2);\n    i0.ɵɵelementStart(6, \"h3\");\n    i0.ɵɵtext(7, \"Enter Orders\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, UserGamingComponent_ng_container_9_form_8_Template, 12, 4, \"form\", 8);\n    i0.ɵɵtemplate(9, UserGamingComponent_ng_container_9_button_9_Template, 2, 0, \"button\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"h4\", 6);\n    i0.ɵɵtext(11, \"Price-Demand Table\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, UserGamingComponent_ng_container_9_table_12_Template, 43, 1, \"table\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.gDetailsShow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.gDetailsShow);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.orderFormShow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitShow);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.gDetailsShow);\n  }\n}\n\nexport var UserGamingComponent = /*#__PURE__*/(function () {\n  var UserGamingComponent = /*#__PURE__*/function () {\n    function UserGamingComponent(fb, dialog, route, gameDetailsService, gamingDataService, loginDetailsService) {\n      _classCallCheck(this, UserGamingComponent);\n\n      this.fb = fb;\n      this.dialog = dialog;\n      this.route = route;\n      this.gameDetailsService = gameDetailsService;\n      this.gamingDataService = gamingDataService;\n      this.loginDetailsService = loginDetailsService;\n      this.userDatacopy = {\n        id: 0,\n        username: '',\n        gameDetails: {\n          professor: \"\",\n          id: \"0\",\n          invCostFactor: 0,\n          backlogCostFactor: 0,\n          demmurageCostFactor: 0,\n          stockInitial: 0,\n          storageTotal: 0,\n          weeksTotal: 0,\n          truckLeadTime: 0,\n          trainLeadTime: 0,\n          truckFreightRate: 0,\n          trainFreightRate: 0,\n          wpcs: [{\n            week: 0,\n            price: 0,\n            cDemand: 0\n          }]\n        },\n        orderRoad: [],\n        orderRail: [],\n        inventoryItems: [],\n        inventoryCost: [],\n        backlogItems: [],\n        backlogCost: [],\n        demumurageItems: [],\n        demmurageCosts: [],\n        transportationCosts: [],\n        totalCosts: [],\n        totalCost: 0,\n        professor: ''\n      };\n      this.orderRoad = [];\n      this.orderRail = [];\n      this.submitShow = false;\n      this.orderFormShow = true;\n      this.uname = '';\n      this.availableStorage = [];\n      this.inventoryStock = [];\n      this.backlogItems = [];\n      this.demmurageItems = [];\n      this.cFulfilledDemands = [];\n      this.invCosts = [];\n      this.blogCosts = [];\n      this.demCosts = [];\n      this.transportCosts = [];\n      this.totalCosts = [];\n      this.weeklyTotalCosts = [];\n      this.gDetailsShow = true;\n      this.start = false;\n      this.week = 1;\n      this.User = {\n        id: 0,\n        email: \"\",\n        password: \"\",\n        name: \"\"\n      };\n      this.receiptsAll = [];\n      this.balanceStock = [];\n      this.shortageAll = [];\n      this.warehouseStock = [];\n      this.formErrors = {\n        'orderRoad': '',\n        'orderRail': ''\n      };\n      this.validationMessages = {\n        'orderRoad': {\n          'required': 'Order by road is required(Enter 0).',\n          'pattern': 'Order by road must contain only numbers.'\n        },\n        'orderRail': {\n          'required': 'orderRail is required.',\n          'pattern': 'orderRail must contain only numbers.'\n        }\n      };\n      this.createForm();\n    }\n\n    _createClass(UserGamingComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.getGameDetailsRecordfromDatabase();\n        var uid = this.getUIDfromURL();\n        this.uid = uid;\n        this.getLoginDetailsRecordfromDatabase(uid);\n        this.getUserGamingDataRecordfromDatabase();\n      }\n      /**\n      * @desc Getting Game Details record form the database\n      **/\n\n    }, {\n      key: \"getGameDetailsRecordfromDatabase\",\n      value: function getGameDetailsRecordfromDatabase() {\n        var _this = this;\n\n        console.log('Prof', localStorage.getItem('profId'));\n        this.gameDetailsService.getGameDetail(localStorage.getItem('profId')).then(function (data) {\n          _this.gDetail = data;\n          console.log(_this.gDetail);\n        }); // this.gameDetailsService.getGameDetail(localStorage.getItem('profId')).subscribe(gameData => {\n        //   this.gDetailArr = gameData.map(data => {\n        //     console.log('G details',data)\n        //     return {\n        //       id: data.payload.doc.id,\n        //       ...data.payload.doc.data() as GameDetail\n        //     }\n        //   });\n        //   this.gDetail = this.gDetailArr[0];\n        // });\n      }\n      /**\n      * @desc Getting Specific user login records form the database\n      **/\n\n    }, {\n      key: \"getLoginDetailsRecordfromDatabase\",\n      value: function getLoginDetailsRecordfromDatabase(uid) {\n        var _this2 = this;\n\n        this.loginDetailsService.getUser(uid).then(function (data) {\n          _this2.getUser = data;\n          _this2.User = _this2.getUser;\n        });\n      }\n      /**\n      * @desc Getting User gaming data records form the database\n      **/\n\n    }, {\n      key: \"getUserGamingDataRecordfromDatabase\",\n      value: function getUserGamingDataRecordfromDatabase() {\n        var _this3 = this;\n\n        this.gamingDataService.getAllUserGamingDataf().subscribe(function (gameData) {\n          _this3.id = gameData.length;\n        });\n      }\n      /**\n      * @desc Getting User unique id from URL\n      **/\n\n    }, {\n      key: \"getUIDfromURL\",\n      value: function getUIDfromURL() {\n        return this.route.snapshot.params['uid'];\n      }\n      /**\n      * @desc Initializing variables of game details from the fetched details from Database\n      * once the server gets loaded\n      **/\n\n    }, {\n      key: \"onServerLoad\",\n      value: function onServerLoad() {\n        this.uname = this.User.email;\n        this.start = true;\n        this.initialStock = this.gDetail.stockInitial;\n        this.totalStorage = this.gDetail.storageTotal;\n        this.totalWeeks = this.gDetail.weeksTotal;\n        this.inventoryStock.push(this.initialStock);\n        this.currentStock = this.initialStock;\n        this.demand = this.gDetail.wpcs[this.week - 1].cDemand;\n        this.totalDemand = this.demand; //Lead Time\n\n        this.truckLeadTime = this.gDetail.truckLeadTime;\n        this.trainLeadTime = this.gDetail.trainLeadTime;\n        this.truckFreightRate = this.gDetail.truckFreightRate;\n        this.trainFreightRate = this.gDetail.trainFreightRate;\n        this.invCostFactor = this.gDetail.invCostFactor;\n        this.backlogCostFactor = this.gDetail.backlogCostFactor;\n        this.demmurageCostFactor = this.gDetail.demmurageCostFactor;\n        this.invCostProdFactor = this.invCostFactor * this.gDetail.wpcs[0].price;\n        this.backlogCostProdFactor = this.backlogCostProdFactor * this.gDetail.wpcs[0].price;\n        this.demProdFactor = this.demProdFactor * this.gDetail.wpcs[0].price; //cfullfilled\n\n        if (this.totalDemand < this.inventoryStock[this.inventoryStock.length - 1]) {\n          this.cFulfilledDemand = this.totalDemand;\n          this.backlogItem = 0;\n        } else {\n          this.cFulfilledDemand = this.inventoryStock[this.inventoryStock.length - 1];\n          this.backlogItem = this.totalDemand - this.inventoryStock[this.inventoryStock.length - 1];\n        }\n\n        this.cFulfilledDemands.push(this.cFulfilledDemand);\n        this.backlogItems.push(this.backlogItem);\n        this.demmurageItem = 0;\n        this.demmurageItems.push(this.demmurageItem); //Reciept = 0 in first week\n\n        this.receipt = 0;\n        this.receiptsAll.push(this.receipt); //Balance Stock\n\n        this.balance = this.currentStock + this.receipt - this.cFulfilledDemand;\n        this.balanceStock.push(this.balance); //Storage\n\n        this.shortage = Math.max(0, this.totalDemand - this.currentStock - this.receipt);\n        this.shortageAll.push(this.shortage); //Warehouse    \n\n        this.warehouse = Math.min(this.balance, this.totalStorage);\n        this.warehouseStock.push(this.warehouse); //costs\n\n        this.invCostProdFactor = this.invCostFactor * this.gDetail.wpcs[this.inventoryStock.length - 1].price;\n        this.backlogCostProdFactor = this.backlogCostFactor * this.gDetail.wpcs[this.inventoryStock.length - 1].price;\n        this.demProdFactor = this.demmurageCostFactor * this.gDetail.wpcs[this.inventoryStock.length - 1].price;\n        this.invCost = this.inventoryStock[this.inventoryStock.length - 1] * this.invCostProdFactor;\n        this.blogCost = this.backlogItems[this.backlogItems.length - 1] * this.backlogCostProdFactor;\n        this.demCost = this.demmurageItems[this.demmurageItems.length - 1] * this.demProdFactor;\n        this.transportCost = 0;\n        this.invCosts.push(this.invCost);\n        this.blogCosts.push(this.blogCost);\n        this.demCosts.push(this.demCost);\n        this.transportCosts.push(this.transportCost);\n        this.totalCost = this.invCost + this.blogCost + this.demCost + this.transportCost;\n        this.weeklyTotalCost = this.totalCost;\n        this.totalCosts.push(this.totalCost);\n        this.weeklyTotalCosts.push(this.weeklyTotalCost);\n      }\n    }, {\n      key: \"createForm\",\n      value: function createForm() {\n        var _this4 = this;\n\n        this.orderForm = this.fb.group({\n          orderRoad: [0, [Validators.required, Validators.pattern]],\n          orderRail: [0, [Validators.required, Validators.pattern]]\n        });\n        this.orderForm.valueChanges.subscribe(function (data) {\n          return _this4.onValueChanged(data);\n        }, function (errmess) {\n          return _this4.errMess = errmess;\n        });\n        this.onValueChanged();\n      }\n    }, {\n      key: \"onValueChanged\",\n      value: function onValueChanged(data) {\n        if (!this.orderForm) {\n          return;\n        }\n\n        var form = this.orderForm;\n\n        for (var field in this.formErrors) {\n          if (this.formErrors.hasOwnProperty(field)) {\n            this.formErrors[field] = '';\n            var control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n              var messages = this.validationMessages[field];\n\n              for (var key in control.errors) {\n                if (control.errors.hasOwnProperty(key)) {\n                  this.formErrors[field] += messages[key] + '';\n                }\n              }\n            }\n          }\n        }\n      }\n      /**\n      * @desc Function where all calculations is done\n      **/\n\n      /**\n             * 1 \tInitial Stock for Week 1 =  \t2000\n                  Initial Stock for Week all other periods = \tBalance Stock\n                    \n                2 \tBacklog for Week 1 =  \t0\n                  Backlog for remaining Week  =  \tShortage of Previous Week\n                    \n                3 \tReceipts = \tOrders Delivered by Road + orders Deliverd by Rail\n                    \n                4 \tTo be Supplied = \tDemand + backlog for that week\n                    \n                5 \tSupplied = \tminimum of (demand + backlog, Initial Stocks + Receipts)\n                    \n                6 \tBalance Stock = \tInitial Stock + Receipts - Supplied\n                    \n                7 \tShortage = \tmaximum of (0, demand - backlog- Initial Stock + Receipts)\n                    \n                8 \tTotal Storage \tAs decided by Admin\n                    \n                9 \tIn warehouse \tminimum of (Balance Stock, total storage)\n                    \n                10 \tIn Demurage \tbalance stock - warehouse\n      \n             */\n\n    }, {\n      key: \"calculateStocks\",\n      value: function calculateStocks() {\n        //Initial Stock and Backlog\n        //Initial Stock\n        this.currentStock = this.balanceStock[this.week - 1]; //Backlog\n\n        this.backlogItem = this.shortageAll[this.week - 1]; //Receipts\n\n        if (this.orderRoad.length - this.truckLeadTime < 0) this.truckReceipt = 0;else this.truckReceipt = this.orderRoad[this.orderRoad.length - this.truckLeadTime];\n        if (this.orderRoad.length - this.trainLeadTime < 0) //if((this.week - 1) < this.trainLeadTime)\n          this.trainReceipt = 0;else this.trainReceipt = this.orderRail[this.orderRoad.length - this.trainLeadTime];\n        this.receipt = this.trainReceipt + this.truckReceipt; //Stock\n\n        this.inventoryStock.push(this.currentStock);\n        this.backlogItems.push(this.backlogItem);\n        this.receiptsAll.push(this.receipt); //To be supplied - totalDemand\n\n        this.demand = this.gDetail.wpcs[this.week].cDemand;\n        this.totalDemand = this.demand + this.backlogItem; //Supplied\n\n        this.cFulfilledDemand = Math.min(this.totalDemand, this.currentStock + this.receipt);\n        this.cFulfilledDemands.push(this.cFulfilledDemand); //Balance Stock\n\n        this.balance = this.currentStock + this.receipt - this.cFulfilledDemand;\n        this.balanceStock.push(this.balance); //Storage\n\n        this.shortage = Math.max(0, this.totalDemand - this.currentStock - this.receipt);\n        this.shortageAll.push(this.shortage); //In warehouse\n\n        this.warehouse = Math.min(this.balance, this.totalStorage);\n        this.warehouseStock.push(this.warehouse); //Demurrage\n\n        this.demmurageItem = this.balance - this.warehouse;\n        this.demmurageItems.push(this.demmurageItem); //Costs\n\n        this.invCostProdFactor = this.invCostFactor * this.gDetail.wpcs[this.inventoryStock.length - 1].price;\n        this.backlogCostProdFactor = this.backlogCostFactor * this.gDetail.wpcs[this.inventoryStock.length - 1].price;\n        this.demProdFactor = this.demmurageCostFactor * this.gDetail.wpcs[this.inventoryStock.length - 1].price;\n        this.trainTransportCost = this.trainFreightRate * Math.min(this.orderRail[this.orderRail.length - 1], 400);\n        this.truckTransportCost = this.truckFreightRate * this.orderRoad[this.orderRoad.length - 1];\n        this.transportCost = this.trainTransportCost + this.truckTransportCost;\n        this.invCost = this.inventoryStock[this.inventoryStock.length - 1] * this.invCostProdFactor;\n        this.blogCost = this.backlogItems[this.backlogItems.length - 1] * this.backlogCostProdFactor;\n        this.demCost = this.demmurageItems[this.demmurageItems.length - 1] * this.demProdFactor;\n        this.invCosts.push(this.invCost);\n        this.blogCosts.push(this.blogCost);\n        this.demCosts.push(this.demCost);\n        this.transportCosts.push(this.transportCost);\n        this.weeklyTotalCost = this.invCost + this.blogCost + this.demCost + this.transportCost;\n        this.weeklyTotalCosts.push(this.weeklyTotalCost);\n        this.totalCost = this.totalCost + this.invCost + this.blogCost + this.demCost + this.transportCost;\n        this.totalCosts.push(this.totalCost);\n      }\n      /**\n      * @desc On submission of each order placed by the user\n      **/\n\n    }, {\n      key: \"onOrderSubmit\",\n      value: function onOrderSubmit() {\n        this.orderRoad.push(+this.orderForm.value['orderRoad']);\n        this.orderRail.push(+this.orderForm.value['orderRail']);\n\n        if (this.week < this.totalWeeks) {\n          this.calculateStocks();\n          this.orderForm.reset({\n            orderRoad: 0,\n            orderRail: 0\n          });\n          this.orderFormDirecive.resetForm({\n            orderRoad: 0,\n            orderRail: 0\n          });\n          this.week++;\n        } else {\n          this.orderFormShow = false;\n          this.submitShow = true;\n        }\n      }\n      /**\n      * @desc To get an array of n numbers length with values stored sequentially upto n\n      **/\n\n    }, {\n      key: \"arrayTwo\",\n      value: function arrayTwo(n) {\n        return Array.from(Array(n).keys());\n      }\n      /**\n      * @desc After the final order placed,\n      * to render data and submit the game records placed by the user\n      **/\n\n    }, {\n      key: \"finalSubmit\",\n      value: function finalSubmit() {\n        this.userDatacopy.id = this.id;\n        this.userDatacopy.username = this.uname;\n        this.userDatacopy.gameDetails = this.gDetail;\n        this.userDatacopy.orderRoad = this.orderRoad;\n        this.userDatacopy.orderRail = this.orderRail;\n        this.userDatacopy.inventoryItems = this.inventoryStock;\n        this.userDatacopy.backlogItems = this.backlogItems;\n        this.userDatacopy.demumurageItems = this.demmurageItems;\n        this.userDatacopy.inventoryCost = this.invCosts;\n        this.userDatacopy.backlogCost = this.blogCosts;\n        this.userDatacopy.demmurageCosts = this.demCosts;\n        this.userDatacopy.transportationCosts = this.transportCosts;\n        this.userDatacopy.totalCosts = this.totalCosts;\n        this.userDatacopy.totalCost = this.totalCosts[this.totalCosts.length - 1];\n        this.putUserGamingDatatoDatabase();\n      }\n      /**\n      * @desc To post the Game Records played by the user to Database\n      **/\n\n    }, {\n      key: \"putUserGamingDatatoDatabase\",\n      value: function putUserGamingDatatoDatabase() {\n        console.log(localStorage.getItem('profId'));\n        this.userDatacopy.professor = localStorage.getItem('profId');\n        this.gamingDataService.putUserGamingDataf(this.userDatacopy);\n        this.userData = this.userDatacopy;\n        this.openGameEnd();\n      }\n      /**\n      * @desc Open GameEnd Component as MatDialog to show final score and logout button\n      **/\n\n    }, {\n      key: \"openGameEnd\",\n      value: function openGameEnd() {\n        alert(\"Your total cost is: \" + this.userDatacopy.totalCost); // this.dialog.open(GameEndComponent, {\n        //   width: '50%', height: '100%',\n        //   data: {\n        //     finalScore: this.userData.totalCosts[this.userData.totalCosts.length - 1],\n        //     uid: +this.uid\n        //   }\n        // });\n      }\n    }]);\n\n    return UserGamingComponent;\n  }();\n\n  UserGamingComponent.ɵfac = function UserGamingComponent_Factory(t) {\n    return new (t || UserGamingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.GameDetailsService), i0.ɵɵdirectiveInject(i5.GamingDataService), i0.ɵɵdirectiveInject(i6.LoginDetailsService));\n  };\n\n  UserGamingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserGamingComponent,\n    selectors: [[\"app-user-gaming\"]],\n    viewQuery: function UserGamingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.orderFormDirecive = _t.first);\n      }\n    },\n    decls: 10,\n    vars: 2,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutGap\", \"10px\", 1, \"container\"], [\"fxFlex\", \"\"], [2, \"text-align\", \"center\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\"], [\"matLine\", \"\"], [\"width\", \"100%\", 4, \"ngIf\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"type\", \"submit\", \"mat-button\", \"\", \"class\", \"background-primary\\n    text-floral-white\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"100%\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"oform\", \"ngForm\"], [\"matInput\", \"\", \"formControlName\", \"orderRoad\", \"placeholder\", \"Road Order\", \"type\", \"text\", \"pattern\", \"[0-9]*\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"orderRail\", \"placeholder\", \"Rail Order\", \"type\", \"text\", \"pattern\", \"[0-9]*\", \"required\", \"\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"background-primary\", \"text-floral-white\", 3, \"disabled\"], [\"type\", \"submit\", \"mat-button\", \"\", 1, \"background-primary\", \"text-floral-white\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function UserGamingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-user-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5, \"Simulation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵtemplate(8, UserGamingComponent_button_8_Template, 2, 0, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, UserGamingComponent_ng_container_9_Template, 13, 5, \"ng-container\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !ctx.start);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.start);\n      }\n    },\n    directives: [i7.UserMenuComponent, i8.DefaultLayoutDirective, i8.DefaultLayoutGapDirective, i8.DefaultFlexDirective, i9.NgIf, i10.MatButton, i11.MatLine, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i12.MatFormField, i13.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.PatternValidator, i1.RequiredValidator, i12.MatError, i9.NgForOf],\n    styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:1px solid #000080;text-align:center}\"]\n  });\n  return UserGamingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}